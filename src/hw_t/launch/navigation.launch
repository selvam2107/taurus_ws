<?xml version="1.0"?>
<launch>

  <arg name="map_file" default="/root/react-ros-robot1/flask-backend/maps/data_map.yaml"/>
  <arg name="model" default="$(find hw_t)/urdf/wheelcheck.urdf.xacro"/>
  <arg name="base_frame" default="base_plate"/>
  <arg name="move_forward_only" default="true"/>
  <arg name="lidar_port" default="/dev/lidar"/>
  <arg name="amcl_scan_topic" default="/scan"/>
  <!-- <arg name="amcl_scan_topic2" default="/scan_2"/> -->
  <!-- <arg name="lidar_ip" default="192.168.7.92"/> -->

  <!-- <node name="odo" pkg="bot" type="scanner.py"/> -->

  <!-- <include file="$(find diff_drive)/launch/ddrive_moons.launch"/> -->

  <!-- <include file="$(find bot)/launch/laser_filter.launch"/>   -->
  
    <include file="$(find hw_t)/launch/run.launch"></include>

  <!-- <include file="$(find diff_drive)/launch/ddrive_moons.launch"/> -->

  <!-- <arg name="lidar_ip" value="$(arg lidar_ip)"/> -->

  <!-- <node  pkg="bot" type="initalpose.py" name="pose_saver" output="screen"/>  -->
 
  <!-- <param name="robot_description" command="$(find xacro)/xacro $(arg model)" /> -->

  
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" >
  </node>
   <node pkg="map_server" name="map_server1" type="map_server" args=" /root/react-ros-robot1/flask-backend/maps/data_map.yaml">
  <remap from='map' to="map2"/>
 </node>
 <!-- /root/react-ros-robot1/flask-backend/maps/map_20_11.yaml -->
 <!-- <node pkg="hw_t" type="taurusdata1.py" name="taurusData"></node> -->
 <!-- <node pkg="hw_t" type="aruco_with_action.py" name="aruco_docking">
  
 </node> -->

 
  <!-- <include file="$(find ira_laser_tools)/launch/laserscan_multi_merger.launch" /> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="laser" args="0 0 0 0 0 0 1 /map /odom  30"/> -->
 <include file="$(find hw_t)/launch/amcl3.launch" >
 <arg name="scan_topic" value="$(arg amcl_scan_topic)"/>
 <!-- <! <arg name="scan_topic2" value="$(arg amcl_scan_topic2)"/>  -->
 </include>
 <!-- <include file="$(find hw_t)/launch/localization.launch"/> -->
 <!-- <include file="$(find als_ros)/launch/mcl.launch">

 </include> -->

<include file="$(find hw_t)/launch/move_base.launch"> 
	<arg name="move_forward_only" value="$(arg move_forward_only)" />
  </include>
    <include file="$(find xsens_driver)/launch/xsens_driver.launch"/>  
      <node name="ekf_localization" pkg="robot_localization" type="ekf_localization_node"  >
    <rosparam command="load" file="$(find hw_t)/config/ekf.yaml" />
     <!-- Remap input topics -->
    <!-- <remap from="/taurus/mobile_base_controller/odom" to="/odom" />
    <remap from="/imu/data" to="/imu/data" /> -->

    <!-- Remap output topics --> 
    
  </node>
  <include file="$(find hw_t)/launch/camera2.launch"/>
    <node pkg="hw_t" type="dep.py" name="distance"></node>
 
 <!-- <node pkg="hw_t" type="back_action2.py" name="back"></node> -->
 <node pkg="hw_t" type="conveyor_red.py" name="conveyor"></node>
 <node pkg="hw_t" type="taurusdata1.py" name="data_storing"></node>
 <node pkg="hw_t" type="send_initialpose.py" name="auto_pose"></node>
 <node pkg="hw_t" type="save_initialpose.py" name="pose_saver"></node>
 <!-- <node pkg="robot_control" type="scanComponent_server.py" name="cobot"></node> -->
 <!-- <node pkg="hw_t" type="dockin.py" name="docking"></node> -->
  <!-- <node pkg="hw_t" type="navi_param.py" name="nav_light"></node> -->
     
    <!-- <node pkg="tf" type="static_transform_publisher" name="base_to_odom" args="0 0 0 0 0 0 /odom /base_link 100"/> -->
  <!-- <include file="$(find hw_t)/launch/robo_ekf.launch"/>  -->
    <!-- <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
  <param name="output_frame" value="odom_combined"/>
  <param name="base_footprint_frame" value="base_link"/>
  <param name="freq" value="30.0"/>
  <param name="sensor_timeout" value="1.0"/>  
  <param name="odom_used" value="true"/>
  <param name="imu_used" value="true"/>
  <param name="vo_used" value="false"/>
  <param name="publish_tf" value="true"/>
  <remap from="odom" to="odom"/>
  <remap from="imu_data" to="imu_data" />
</node> -->
  <!-- <node pkg="robot_localization" type="ukf_localization_node" name="ukf_se" clear_params="true">
    <rosparam command="load" file="$(find hw_t)/config/ukf.yaml" />

      Placeholder for output topic remapping
    <remap from="odometry/filtered" to="odom"/>
    <remap from="accel/filtered" to="odom/accel"/>  

  </node> -->

</launch>

 
